- resource: https://global.solaxcloud.com/api/v2/dataAccess/realtimeInfo/get
  method: POST	
  headers:
    Content-Type: application/json  
    tokenId: !secret SolaxTokenId
  payload: !secret SolaxWifiSnPayload
  scan_interval: 300 #Cloud updates once per 5 minutes.
  timeout: 60

  sensor:

  #Status
    - name: "Solax cloud connection status"
      value_template: "{{ value_json['exception'] }}"    
      icon: >-
        {% if value_json['success'] == true %}mdi:cloud-check-outline
        {% else %}mdi:cloud-mdi-cancel-outline
        {% endif %}

    - name: "Solax cloud last update"
      value_template: "{{ strptime(value_json['result'][0]['uploadTime'], '%Y-%m-%d %H:%M:%S').replace(tzinfo=now().tzinfo) }}"
      device_class: timestamp
      icon: mdi:calendar-range

  #Inverter status
    - name: "Solax inverter status"
      value_template: >-
        {% set inverterStatusMap = {
          100: 'Waiting for operation',
          101: 'Self-test',
          102: 'Normal',
          103: 'Recoverable Fault',
          104: 'Permanent fault',
          105: 'Firmware upgrade',
          106: 'EPS detection',
          107: 'Off-frid',
          108: 'Self-test (Italian safety regulations)',
          109: 'Sleep mode',
          110: 'Standby mode',
          111: 'Photovoltaic wake-up battery mode',
          112: 'Generator detection mode',
          113: 'Generator mode',
          114: 'Fast shutdown standby mode',
          130: 'VPP mode',
          131: 'TOU-Self use',
          132: 'TOU-Charging',
          133: 'TOU-Discharging'
        } %}
        {{ inverterStatusMap.get(value_json['result'][0]['inverterStatus'] | int, 'Unknown status') }}
      
  # Solar panel output to inverter (DC)
    - name: "Solax PV1 input power"
      value_template: "{{ value_json['result'][0]['powerdc1'] | float(0) }}"
      unit_of_measurement: "W"
      device_class: power
      state_class: measurement
      icon: mdi:solar-power

    - name: "Solax PV2 input power"
      value_template: "{{ value_json['result'][0]['powerdc2'] | float(0) }}"
      unit_of_measurement: "W"
      device_class: power
      state_class: measurement
      icon: mdi:solar-power

    - name: "Solax PV3 input power"
      value_template: "{{ value_json['result'][0]['powerdc3'] |  float(0) }}"
      unit_of_measurement: "W"
      device_class: power
      state_class: measurement
      icon: mdi:solar-power

    - name: "Solax PV4 input power"
      value_template: "{{ value_json['result'][0]['powerdc4'] | float(0) }}"
      unit_of_measurement: "W"
      device_class: power
      state_class: measurement
      icon: mdi:solar-power

    # Solax doesn't supply a total of all PV arrays
    - name: "Solax PV total input power"
      value_template: "{{ value_json['result'][0]['powerdc1'] | float(0) + value_json['result'][0]['powerdc2'] | float(0) + value_json['result'][0]['powerdc3'] | float(0) + value_json['result'][0]['powerdc4'] | float(0) }}"
      unit_of_measurement: "W"
      device_class: power
      state_class: measurement
      icon: mdi:solar-power


  #Inverter output
    - name: "Solax inverter output power"
      value_template: "{{ value_json['result'][0]['acpower'] | float }}"
      unit_of_measurement: "W"
      device_class: power
      state_class: measurement
      icon: mdi:solar-panel-large

  #Grid data 
    - name: "Solax grid export power"
      value_template: "{{ value_json['result'][0]['feedinpower'] | float }}"
      unit_of_measurement: "W"
      device_class: power
      state_class: measurement
      icon: mdi:transmission-tower-export 

  #Consume power is not provided by Solax and calculated
    - name: "Solax consume power"
      value_template: "{{ value_json['result'][0]['acpower'] | float(0) - value_json['result'][0]['feedinpower'] | float(0) }}"
      unit_of_measurement: "W"
      device_class: power
      state_class: measurement
      icon: mdi:home-lightning-bolt-outline

  #Meter 2
    - name: "Solax meter 2 power"
      value_template: "{{ value_json['result'][0]['feedinpowerM2'] | float }}"
      unit_of_measurement: "W"
      device_class: power
      state_class: measurement
      icon: mdi:transmission-tower-export


  #Battery
    - name: "Solax battery status"
      value_template: >-
        {% set batStatusMap = {
          0: 'Normal',
          1: 'Fault',
          2: 'Disconnected'
        } %}
        {{ batStatusMap.get(value_json['result'][0]['batStatus'] | int, 'Unknown status') }}
      icon: >-
        {% set batStatus = value_json['result']['batStatus'] | int %}
        {% if batStatus == 0 %}mdi:battery-check
        {% elif batStatus == 1 %}mdi:battery-alert
        {% elif batStatus == 2 %}mdi:battery-remove
        {% else %}mdi:battery-unknown
        {% endif %}

    - name: "Solax battery capacity"
      value_template: "{{ value_json['result'][0]['soc'] | float }}"
      unit_of_measurement: "%"
      state_class: measurement
      device_class: battery

    - name: "Solax battery power"
      value_template: "{{ value_json['result'][0]['batPower'] | float }}"
      unit_of_measurement: "W"
      device_class: power
      state_class: measurement
      icon: mdi:power-plug-battery-outline

    - name: "Solax EPS A phase active power"
      value_template: "{{ value_json['result'][0]['peps1'] | float }}"
      unit_of_measurement: "W"
      device_class: power
      state_class: measurement

    - name: "Solax EPS B phase active power"
      value_template: "{{ value_json['result'][0]['peps2'] | float }}"
      unit_of_measurement: "W"
      device_class: power
      state_class: measurement

    - name: "Solax EPS C phase active power"
      value_template: "{{ value_json['result'][0]['peps3'] | float }}"
      unit_of_measurement: "W"
      device_class: power
      state_class: measurement

  #Inverter statistics
    - name: "Solax yield energy today"
      value_template: "{{ value_json['result'][0]['yieldtoday'] | float }}"
      unit_of_measurement: "kWh"
      device_class: energy
      state_class: total
      icon: mdi:solar-power-variant-outline

    - name: "Solax yield energy total"
      value_template: "{{ value_json['result'][0]['yieldtotal'] | float }}"
      unit_of_measurement: "kWh"
      device_class: energy
      state_class: total
      icon: mdi:solar-power-variant-outline

    - name: "Solax grid energy import total"
      value_template: "{{ value_json['result'][0]['consumeenergy'] | float }}"
      unit_of_measurement: "kWh"
      device_class: energy
      state_class: total
      icon: mdi:transmission-tower-import

    - name: "Solax grid energy export total"
      value_template: "{{ value_json['result'][0]['feedinenergy'] | float }}"
      unit_of_measurement: "kWh"
      device_class: energy
      state_class: total
      icon: mdi:transmission-tower-export

